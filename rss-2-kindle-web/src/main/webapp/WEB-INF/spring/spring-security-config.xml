<?xml version="1.0" encoding="UTF-8"?>
<b:beans xmlns="http://www.springframework.org/schema/security"
         xmlns:b="http://www.springframework.org/schema/beans"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:context="http://www.springframework.org/schema/context"
         xsi:schemaLocation="http://www.springframework.org/schema/security	http://www.springframework.org/schema/security/spring-security.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="org.roag.security"/>

    <b:bean name="bcryptEncoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

<!--
    <b:bean id="daoAuthenticationProvider"
          class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <b:property name="userDetailsService" ref="inMemoryUserDetailsManager"/>
        <b:property name="passwordEncoder" ref="bcryptEncoder"/>
    </b:bean>
-->

    <b:bean id="subscriberFactory" class="org.roag.service.SubscriberFactory"/>

    <b:bean id="testUser" factory-bean="subscriberFactory" factory-method="newUser">
        <b:constructor-arg index="0" value="test"/>
        <b:constructor-arg index="1" value="test"/>
        <b:property name="subscribers">
            <b:list>
                <b:ref bean="testSubscriber"/>
            </b:list>
        </b:property>
    </b:bean>

    <b:bean id="testSubscriber" factory-bean="subscriberFactory" factory-method="newSubscriber">
        <b:constructor-arg index="0" value="test@test.com"/>
        <b:constructor-arg index="1" value="test"/>
        <b:constructor-arg index="2" value="http://test.com/rss"/>
    </b:bean>

    <!--Using in memory repository for testing goals  -->
    <b:bean id="userRepository" class="org.roag.ds.impl.MemoryUserRepository" factory-method="getInstance">
        <b:property name="users">
            <b:map>
                <b:entry key="test" value-ref="testUser"/>
            </b:map>
        </b:property>
    </b:bean>

    <b:bean id="userDetailsService" class="org.roag.security.SecUserDetailsService">
        <!--<b:property name="subscriberRepository" ref="subscriberRepository"/>-->
    </b:bean>

    <http realm="" use-expressions="false">
        <intercept-url pattern="/" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/login.jsp*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/admin" access="ROLE_ADMIN"/>
        <intercept-url pattern="/exitUser*" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <intercept-url pattern="/**" access="ROLE_USER"/>

        <form-login login-page="/login.jsp"
                    authentication-failure-url="/login.jsp?login_error=1"
                    default-target-url="/jsp/profile.jsp" />
        <http-basic/>
        <logout logout-success-url="/exitUser.jsp"/>
        <remember-me />
        <headers/>
        <csrf/>
    </http>

    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsService">

        </authentication-provider>
<!--
        <authentication-provider>
            &lt;!&ndash; adding encryption for passwords &ndash;&gt;
            &lt;!&ndash;<password-encoder ref="bcryptEncoder"/>&ndash;&gt;
            <user-service id="inMemoryUserDetailsManager" properties="WEB-INF/spring/users.properties">
&lt;!&ndash;
                <user name="admin" password="admin" authorities="ROLE_USER, ROLE_ADMIN" />
                <user name="user" password="user" authorities="ROLE_USER" />
                <user name="guest" password="guest" authorities="ROLE_GUEST" />
&ndash;&gt;
            </user-service>
        </authentication-provider>
-->
    </authentication-manager>

</b:beans>
